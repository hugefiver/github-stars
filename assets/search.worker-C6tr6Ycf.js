let n=null,r=null;async function l(){if(!n){const e=await import("./flexsearch.bundle.module.min-CKuceitY.js");n=e.default||e}const a={document:{id:"id",index:[{field:"name",store:!0,boost:2},{field:"full_name",store:!0,boost:2},{field:"description",store:!0,boost:1},{field:"language",store:!0,boost:1},{field:"topics",store:!0,boost:1.5,split:/\W+/}]},preset:"score",tokenize:"forward",optimize:!0};r=new n.Index(a)}async function c(a){r||await l(),r=null,await l(),a.forEach(e=>{const s={id:e.id,name:e.name||"",full_name:e.full_name||"",description:e.description||"",language:e.language||"",topics:Array.isArray(e.topics)?e.topics.join(" "):""};r.add(s.id,s)})}function u(a,e=100){if(!r)throw new Error("Search index not initialized");const s=r.search(a,{limit:e,suggest:!0});let t=[];return Array.isArray(s)&&(t=s.flatMap(o=>o&&Array.isArray(o.result)?o.result:Array.isArray(o)?o:[]).map(o=>{const i=r.get(o);return{id:i.id,name:i.name,full_name:i.full_name,description:i.description,language:i.language,topics:i.topics?i.topics.split(" "):[],score:1}})),t}self.onmessage=async function(a){const{type:e,payload:s}=a.data;try{switch(e){case"INITIALIZE":await l(),self.postMessage({type:"INITIALIZED",payload:{success:!0}});break;case"BUILD_INDEX":c(s.repositories),self.postMessage({type:"INDEX_BUILT",payload:{success:!0,count:s.repositories.length}});break;case"SEARCH":const t=u(s.query,s.limit);self.postMessage({type:"SEARCH_RESULTS",payload:{query:s.query,results:t,count:t.length}});break;case"UPDATE_DATA":r&&c(s.repositories),self.postMessage({type:"DATA_UPDATED",payload:{success:!0}});break;default:self.postMessage({type:"ERROR",payload:{error:`Unknown message type: ${e}`}})}}catch(t){self.postMessage({type:"ERROR",payload:{error:t instanceof Error?t.message:"Unknown error"}})}};var d=Object.freeze({__proto__:null});export{d as _};
