let n=null,t=null;async function c(){if(!n){const e=await import("./flexsearch.bundle.module.min-IL7xYaFU.js");n=e.default||e}const a={document:{id:"id",index:[{field:"name",store:!0,boost:2},{field:"full_name",store:!0,boost:2},{field:"description",store:!0,boost:1},{field:"language",store:!0,boost:1},{field:"topics",store:!0,boost:1.5,split:/\W+/}]},preset:"score",tokenize:"forward",optimize:!0};t=new n.Index(a)}function l(a){if(!t)throw new Error("Search index not initialized");t=null,c(),a.forEach(e=>{const s={id:e.id,name:e.name||"",full_name:e.full_name||"",description:e.description||"",language:e.language||"",topics:Array.isArray(e.topics)?e.topics.join(" "):""};t.add(s.id,s)})}function u(a,e=100){if(!t)throw new Error("Search index not initialized");return t.search(a,{limit:e,suggest:!0}).flatMap(i=>i.result||[]).map(i=>{const o=t.get(i);return{id:o.id,name:o.name,full_name:o.full_name,description:o.description,language:o.language,topics:o.topics?o.topics.split(" "):[],score:1}})}self.onmessage=async function(a){const{type:e,payload:s}=a.data;try{switch(e){case"INITIALIZE":await c(),self.postMessage({type:"INITIALIZED",payload:{success:!0}});break;case"BUILD_INDEX":l(s.repositories),self.postMessage({type:"INDEX_BUILT",payload:{success:!0,count:s.repositories.length}});break;case"SEARCH":const r=u(s.query,s.limit);self.postMessage({type:"SEARCH_RESULTS",payload:{query:s.query,results:r,count:r.length}});break;case"UPDATE_DATA":t&&l(s.repositories),self.postMessage({type:"DATA_UPDATED",payload:{success:!0}});break;default:self.postMessage({type:"ERROR",payload:{error:`Unknown message type: ${e}`}})}}catch(r){self.postMessage({type:"ERROR",payload:{error:r instanceof Error?r.message:"Unknown error"}})}};
